# .github/workflows/prod_runner.yml

name: Echo 4 Prod Workflow

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Check out repository code âœ…
        uses: actions/checkout@v4
        with:
          # This checks out your repository contents into 
          # .../actions-runner/_work/Echo4/Echo4/app
          path: EchoProd

      # 2. Create Venv and Install Dependencies (Combined step)
      # This step creates the venv and installs the required packages.
      - name: Install dependencies in venv ðŸ“¦
        working-directory: EchoProd
        run: |
            # Create the virtual environment named 'venv'
            python -m venv venv
            ./venv/bin/pip install --upgrade pip
            ./venv/bin/pip install -r requirements.txt

      - name: Create .env file
        working-directory: EchoProd
        run: |
            echo DISCORD_TOKEN="${{ secrets.DISCORD_TOKEN }}" > .env
            echo ADMIN_SERVER_ID="${{ secrets.ADMIN_SERVER_ID }}" >> .env
            echo OWNER_ID="${{ secrets.OWNER_ID }}" >> .env
            # Add other environment variables as needed
        
    #   - name: Use .env file (example)
    #     working-directory: ../../../../EchoProd
    #     run: |
    #         cat .env # Verify the content
    #         # Your application can now read from .env

      # 3. Run the Python Script using Venv's interpreter (Combined run step)
      # Now you call the Python executable directly from the venv's bin directory.
      - name: Move Bot ðŸ‘‹
        run: |
          mv EchoProd ../../../../EchoProd
      # 3. Run the Python Script using Venv's interpreter (Combined run step)
      # Now you call the Python executable directly from the venv's bin directory.
      - name: Run Discord Bot ðŸ‘‹
        working-directory: ../../../../EchoProd
        run: |
          # Use the full path to the Python executable inside the VENV
          nohup ./venv/bin/python Discord.py > bot.log 2>&1 &
