name: Echo 4 Prod Workflow (Docker)

on:
  push:
    branches: [ main ]

env:
  # Use a consistent name for your Docker image and container
  IMAGE_NAME: echo4-bot
  CONTAINER_NAME: echo4-prod-container

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Check out repository code ✅
        uses: actions/checkout@v4

      # 1. Create .env file for build/runtime (optional, but good practice)
      - name: Create .env file 📄
        run: |
            echo DISCORD_TOKEN="${{ secrets.DISCORD_TOKEN }}" > .env
            echo ADMIN_SERVER_ID="${{ secrets.ADMIN_SERVER_ID }}" >> .env
            echo OWNER_ID="${{ secrets.OWNER_ID }}" >> .env
            # Note: This .env will be baked into the image, or used to load env vars at runtime

      # 2. Build the Docker Image 🏗️
      # The '.' specifies the current directory as the build context.
      - name: Build Docker image 🧱
        run: |
          # The -t flag tags the image with the name from the environment variable
          docker build -t $IMAGE_NAME .

      # 3. Stop and Remove the Old Container, then Start the New One 🔄
      - name: Deploy new container 🚀
        run: |
          # Kill and remove the currently running container (if it exists)
          # '|| true' ensures the command doesn't fail if the container doesn't exist yet
          echo "Stopping and removing old container..."
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true
          
          echo "Starting new container..."
          # Run the new container:
          # -d: Detached mode (run in background)
          # --name: Assign the container a recognizable name
          # --restart=always: Ensure the bot restarts if it crashes or the Pi reboots
          # --env-file .env: Pass environment variables (DISCORD_TOKEN, etc.) from the .env file
          # $IMAGE_NAME: The image we just built
          docker run -d \
            --name $CONTAINER_NAME \
            --restart=always \
            --env-file .env \
            $IMAGE_NAME
          
          echo "Deployment complete."